[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This website was created for the upcoming end-to-end data analytics, data science, and machine learning project initiatives in artificial intelligence(AI), for the general public, which can enable solutions for socio-economic challenges and real-world industry use-cases in education, agriculture, retail, healthcare, transportation, and other fields."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "end to end projects",
    "section": "",
    "text": "All Tools Combinations applied in this post for Data Science to Explain in a way to reach more audience\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 15, 2023\n\n\nSumendar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nతెలంగాణలోని… అన్ని జిల్లాల్లోని రెవెన్యూ డివిజన్లో, మరియు మండలాల్లో మొత్తం జనాభా\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 15, 2023\n\n\nSumendar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nతెలంగాణలో…అన్ని మార్కెట్ యార్డులో 01-Feb-2023 నుండి 28-Feb-2023 మధ్య వ్యవసాయ పంటలకి రోజువారీ ధరలు\n\n\n\n\n\n\n\nagriculture\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 15, 2023\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code (created here within qmd file edited updated within this file only)\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nAug 15, 2022\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nAug 12, 2022\n\n\nSumendar\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/1-SQLServerNotebook.html",
    "href": "posts/post-with-code/1-SQLServerNotebook.html",
    "title": "All Tools Combinations applied in this post for Data Science to Explain in a way to reach more audience",
    "section": "",
    "text": "USE salesdb;\n\nCommands completed successfully.\n\n\nTotal execution time: 00:00:00.025\n\n\n\nSELECT TOP 15 * FROM Customers;\n\n(15 rows affected)\n\n\nTotal execution time: 00:00:00.127\n\n\n\nCustomerIDFirstNameMiddleInitialLastName1AaronNULLAlexander2AaronNULLBryant3AaronNULLButler4AaronNULLChen5AaronNULLColeman6AaronNULLCon7AaronNULLEdwards8AaronNULLFlores9AaronNULLFoster10AaronNULLGonzales11AaronNULLGriffin12AaronNULLHenderson13AaronNULLHernandez14AaronNULLHill15AaronNULLJai\n\n\n\n--https://docs.microsoft.com/en-us/sql/azure-data-studio/notebooks/notebooks-sql-kernel\n--SELECT distinct Title FROM Person.Person\n--SELECT distinct Type, Category FROM Sales.SpecialOffer\n\n(7 rows affected)\n\n\n(8 rows affected)\n\n\nTotal execution time: 00:00:01.895\n\n\n\nTitleSr.Mrs.NULLSra.Ms.MsMr.\n\n\n\nTypeCategoryDiscontinued ProductResellerExcess InventoryCustomerExcess InventoryResellerNew ProductResellerNo DiscountNo DiscountSeasonal DiscountCustomerSeasonal DiscountResellerVolume DiscountReseller\n\n\n\nSELECT distinct size, color from Production.Product\n\n(68 rows affected)\n\n\nTotal execution time: 00:00:00.021\n\n\n\nsizecolorNULLNULLNULLBlackNULLBlueNULLGreyNULLMultiNULLRedNULLSilverNULLSilver/Black38Black38Silver38Yellow40Black40Silver40Yellow42Black42Silver42Yellow44Black44Blue44Red44Silver44Yellow46Black46Blue46Silver46Yellow48Black48Red48Silver48Yellow50Blue50Yellow52Black52Red52Silver54Blue54Yellow56Red58Black58Blue58Red58Yellow60Black60Blue60Red60Yellow62Black62Blue62Red62Yellow70SilverLBlackLBlueLMultiLWhiteLYellowMBlackMBlueMMultiMWhiteMYellowSBlackSBlueSMultiSYellowXLBlackXLMultiXLYellow\n\n\n\nSQL Server Coding (Direct copied from Azure Data Studion After executing output got there then pasted here)\n\n\nData Types\n\n\n\nImgur\n\n\n\n\nDate Datatype\n\nDeclare @myDate date = '02-02-2016'\nSelect @myDate as MyDate\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.011\n\n\n\nMyDate2016-02-02\n\n\n\nDeclare @myDateTime datetime = '02-02-2016'\nSelect @myDateTime as MyDateTime\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.006\n\n\n\nMyDateTime2016-02-02 00:00:00.000\n\n\n\nDeclare @myTime time = '16:25:42.1214'\nSelect @myTime as MyTime\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.039\n\n\n\nMyTime16:25:42.1214000\n\n\n\nDeclare @myTime time(2) = '16:25:42.1214'\nSelect @myTime as MyTime\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.018\n\n\n\nMyTime16:25:42.1200000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharecter Datatype\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-- Character\nDECLARE @myChar CHAR(20) = 'PDI'\nSELECT @myChar AS Char, DATALENGTH (@myChar) as Datalength, LEN(@myChar) AS Len\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.040\n\n\n\nCharDatalengthLenEdvancer            208\n\n\n\n-- Varchar\nDECLARE @myChar VARCHAR(20) = 'PDI Lmtd'\nSELECT @myChar AS Varchar, DATALENGTH (@myChar) as Datalength, LEN(@myChar) AS Len\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.014\n\n\n\nVarcharDatalengthLenEdvancer88\n\n\n\n\nNumeric Datatype\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDECLARE @num NUMERIC(7,2) = 12376.7854\nSELECT @num as NumericData\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.024\n\n\n\nNumericData12376.79\n\n\n\nDECLARE @SmallInt SMALLINT = 12376.7854\nSELECT @SmallInt AS SmallIntData\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.023\n\n\n\nSmallIntData12376\n\n\n\n-- DECLARE @SmallInt SMALLINT = -32769 \n-- SELECT @SmallInt AS SmallIntData\n-----------------Errors when we un comment above and run codes\n-- if we give more/less than \n--affordable range it will gives an error\n--Msg 220, Level 16, State 1, Line 1\n--Arithmetic overflow error for data type smallint, value = -32769.\n\nCommands completed successfully.\n\n\nTotal execution time: 00:00:00.001\n\n\n\nDECLARE @TinyInt SMALLINT = 254\nSELECT @TinyInt AS TinyIntData\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.009\n\n\n\nTinyIntData254\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n--Float\nDECLARE @float FLOAT(10) = 12376.7854\nSELECT @float as FLOAT\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.012\n\n\n\nFLOAT12376.785\n\n\n\n--Data type precedence\nDECLARE @float1 FLOAT(10), @int INT\nSET @float1 = 12376.7854\nSET @int = 570\nSELECT @float1 + @int as Result\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.007\n\n\n\nResult12946.785\n\n\n\n\nFilter the data using where\n\nUSE AdventureWorks2014;\nSELECT TOP 10 * FROM AdventureWorks2014.HumanResources.Employee WHERE SickLeaveHours > 50;\n\n(10 rows affected)\n\n\nTotal execution time: 00:00:00.195\n\n\n\nBusinessEntityIDNationalIDNumberLoginIDOrganizationNodeOrganizationLevelJobTitleBirthDateMaritalStatusGenderHireDateSalariedFlagVacationHoursSickLeaveHoursCurrentFlagrowguidModifiedDate1295847284adventure-works\\ken0NULLNULLChief Executive Officer1969-01-29SM2009-01-14199691f01251e5-96a3-448d-981e-0f99d789110d2014-06-30 00:00:00.0004112457891adventure-works\\rob00x5AD63Senior Tool Designer1974-12-23SM2007-12-0504880159747955-87b8-443f-8ed4-f8ad3afdf3a92014-06-30 00:00:00.0008811994146adventure-works\\diane10x5AE1584Research and Development Engineer1986-06-05SF2008-12-2916251131112635-663b-4018-b4a2-a685c0bf48a42014-06-30 00:00:00.0009658797903adventure-works\\gigi00x5AE1684Research and Development Engineer1979-01-21MF2009-01-1616351150b6cdc6-7570-47ef-9570-48a64b5f2ecf2014-06-30 00:00:00.00010879342154adventure-works\\michael60x5AE1784Research and Development Manager1984-11-30MM2009-05-03116641eaa43680-5571-40cb-ab1a-3bf68f04459e2014-06-30 00:00:00.00025519899904adventure-works\\james10x781Vice President of Production1983-01-07SM2009-02-03164521d7314f24-2af1-429c-9bbb-4038f45f3e6c2014-06-30 00:00:00.00027446466105adventure-works\\jo00x7AD63Production Supervisor - WC601956-10-08SF2008-02-2708060183ffaac6-b895-481f-b897-14f965d4da472014-06-30 00:00:00.00040309738752adventure-works\\jolynn00x7ADA3Production Supervisor - WC601956-01-16SF2007-12-260826112cc71b96-f421-485e-9832-8723337749bb2014-06-30 00:00:00.0004733237992adventure-works\\andrew00x7ADE3Production Supervisor - WC101988-09-06SM2009-02-2206552108365b05-c143-4260-a93c-6b69418b19462014-06-30 00:00:00.00048690627818adventure-works\\ruth00x7ADEB04Production Technician - WC101956-06-04MF2008-01-060836113e3b6905-209e-442e-b8a8-9a0980241c6a2014-06-30 00:00:00.000\n\n\n\nSELECT TOP 10 * FROM Sales.CreditCard WHERE ExpYear = 2008;\n\n(10 rows affected)\n\n\nTotal execution time: 00:00:00.021\n\n\n\nCreditCardIDCardTypeCardNumberExpMonthExpYearModifiedDate10SuperiorCard33332126386493820082011-08-31 00:00:00.00011SuperiorCard333353525173631020082014-05-04 00:00:00.00012SuperiorCard33334316194519420082012-05-30 00:00:00.00015SuperiorCard333368660655991120082013-01-29 00:00:00.00017ColonialVoice77771220960729820082014-01-16 00:00:00.00026Distinguish555541958479981120082013-08-27 00:00:00.00027SuperiorCard333338373928251220082013-11-11 00:00:00.00031Vista111120401999861020082009-01-15 00:00:00.00038Distinguish55555420711099720082013-09-24 00:00:00.00040Distinguish55555841603354420082013-08-25 00:00:00.000\n\n\n\nUSE Training\n\nCommands completed successfully.\n\n\nTotal execution time: 00:00:00.001\n\n\n\n-- selecting products table\nSELECT * FROM products;\n\n(10 rows affected)\n\n\nTotal execution time: 00:00:00.010\n\n\n\nProductIDProductCodeProductDescriptioncolor1AR-5381Adjustable RaceBlack2BA-8327Bearing BallSilver3BE-2349BB Ball BearingGrey4BE-2908Headset Ball BearingsBlack5BL-2036BladeGrey6CA-5965LL CrankarmGrey7CA-6738ML CrankarmSilver8CA-7457HL CrankarmSilver9CB-2903Chainring BoltsSilver10CN-6137Chainring NutGrey\n\n\n\n-- selecting city table\nSELECT * FROM city;\n\n(12 rows affected)\n\n\nTotal execution time: 00:00:00.009\n\n\n\nCityIDCityCodeCityNamePopulationDensitysampleColumn1ADIAhmedabadHigh12BLRBangaloreHigh13CHDChandigarhLow14CHNChennaiHigh15DDNDehradunMedium16DELDelhiHigh17JPRJaipurMedium18KOLKolkataHigh19MUMMumbaiHigh110MYSMysoreLow111PDYPuducherryLow112RNCRanchiMedium1\n\n\n\nSELECT * from City;\n\n(12 rows affected)\n\n\nTotal execution time: 00:00:00.032\n\n\n\nCityIDCityCodeCityNamePopulationDensitysampleColumn1ADIAhmedabadHigh12BLRBangaloreHigh13CHDChandigarhLow14CHNChennaiHigh15DDNDehradunMedium16DELDelhiHigh17JPRJaipurMedium18KOLKolkataHigh19MUMMumbaiHigh110MYSMysoreLow111PDYPuducherryLow112RNCRanchiMedium1\n\n\n\nUse Training;\n\nCommands completed successfully.\n\n\nTotal execution time: 00:00:00.007\n\n\n\nSELECT * \nfrom City where populationDensity = 'High';\n\n(6 rows affected)\n\n\nTotal execution time: 00:00:00.050\n\n\n\nCityIDCityCodeCityNamePopulationDensitysampleColumn1ADIAhmedabadHigh12BLRBangaloreHigh14CHNChennaiHigh16DELDelhiHigh18KOLKolkataHigh19MUMMumbaiHigh1\n\n\n\nSELECT *\n  FROM City WHERE PopulationDensity = 'High'\n\n(6 rows affected)\n\n\nTotal execution time: 00:00:00.007\n\n\n\nCityIDCityCodeCityNamePopulationDensitysampleColumn1ADIAhmedabadHigh12BLRBangaloreHigh14CHNChennaiHigh16DELDelhiHigh18KOLKolkataHigh19MUMMumbaiHigh1\n\n\n\nSELECT\n  MIN([DATE_KEY]) AS [MIN_DATE],\n  MAX([DATE_KEY]) AS [MAX_DATE],\n  DATEDIFF(YEAR, MIN([DATE_KEY]), MAX([DATE_KEY])) [SPAN_IN_YEARS]\nFROM [EDW].[F_COLLISIONS]\n\n: Msg 208, Level 16, State 1, Line 1\nInvalid object name 'EDW.F_COLLISIONS'.\n\n\nTotal execution time: 00:00:00.032\n\n\n\nDECLARE @myDate date = '02-02-2016';\nSELECT @myDate as MyDate;\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.024\n\n\n\nMyDate2016-02-02\n\n\n\nDECLARE @myDate datetime = '02-02-2016';\nSELECT @myDate as MyDate;\n\n(1 row affected)\n\n\nTotal execution time: 00:00:00.072\n\n\n\nMyDate2016-02-02 00:00:00.000\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code (created here within qmd file edited updated within this file only)",
    "section": "",
    "text": "This is a post with executable code check\n\nknitr::kable(\n  mtcars[1:6, 1:10]\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n\n\nValiant\n18.1\n6\n225\n105\n2.76\n3.460\n20.22\n1\n0\n3\n\n\n\n\n\n\nknitr::kable(\n  airquality[1:6, 1:6]\n)\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6\n\n\n\n\n\n\nlibrary(ggplot2)\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\"\n)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 37 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 37 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nSQL code in RStudio(https://posit.co/blog/working-with-databases-and-sql-in-rstudio/ and https://irene.rbind.io/post/using-sql-in-rstudio/ and https://www.r-bloggers.com/2022/02/working-with-databases-and-sql-in-rstudio/ and https://statisticsglobe.com/run-sql-query-r):\n\n# Install these packages if you have not already\n# install.packages(c('DBI', 'RPostgres'))\nlibrary(DBI)\nlibrary(RPostgres)\n\n\ncon <- DBI::dbConnect(\n  RPostgres::Postgres(),\n  dbname = 'tutorialdb',\n  host = 'localhost',\n  port = 5432,\n  user = 'postgres',\n  password = 'sumendar' # insert your password here\n)\n\n\nDBI::dbGetQuery(con, 'SELECT customer_id, name, location, email FROM customers LIMIT 3')\n\n  customer_id    name  location                      email\n1           1 Orlando Australia                           \n2           2   Keith     India keith0@adventure-works.com\n3           3   Donna   Germany donna0@adventure-works.com\n\n\n\nimport math\nprint(math.sqrt(81))\n\n9.0\n\n\n\n\nloading data into pandas and display first 5 rows:\n\nimport pandas as pd\ndf =  pd.read_csv(\"medals.csv\")\ndf.head()\n\n   Year      City       Sport  ...       Event Event gender   Medal\n0  1924  Chamonix     Skating  ...  individual            M  Silver\n1  1924  Chamonix     Skating  ...  individual            W    Gold\n2  1924  Chamonix     Skating  ...       pairs            X    Gold\n3  1924  Chamonix   Bobsleigh  ...    four-man            M  Bronze\n4  1924  Chamonix  Ice Hockey  ...  ice hockey            M    Gold\n\n[5 rows x 8 columns]\n\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Some example data to display\nx = np.linspace(0, 2 * np.pi, 400)\ny = np.sin(x ** 2)\nfig, axs = plt.subplots(2, 2)\naxs[0, 0].plot(x, y)\naxs[0, 0].set_title('Axis [0, 0]')\naxs[0, 1].plot(x, y, 'tab:orange')\naxs[0, 1].set_title('Axis [0, 1]')\naxs[1, 0].plot(x, -y, 'tab:green')\naxs[1, 0].set_title('Axis [1, 0]')\naxs[1, 1].plot(x, -y, 'tab:red')\naxs[1, 1].set_title('Axis [1, 1]')\n\nfor ax in axs.flat:\n    ax.set(xlabel='x-label', ylabel='y-label')\n\n# Hide x labels and tick labels for top plots and y ticks for right plots.\nfor ax in axs.flat:\n    ax.label_outer()\nplt.show()\n\n\n\n\n\n\n\n\n\n\nInstagram Embed\n\n\n\n::: {style=” display: flex; flex-direction: row; align-items: center;“} ::: {style=”background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;“}\n\n\n::: {style=” background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;“}\n\n::: {style=” background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;“} ::: ::: :::\n\n\n\n\n\n\n\n\n\n::: {style=” color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;“} View this post on Instagram\n\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {style=” background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;“}\n\n::: {style=” width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)“}\n\n:::\n\n::: {style=” width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);“}\n\n::: {style=” background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);“} :::\n::: {style=” width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);“} ::: ::: :::\n\n::: {style=” background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;“}\n\n::: {style=” background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;“} ::: :::\n\n\nA post shared by allinpython (@allinpython)\n\n:::\n\n\n\n\nSlideshare Embed\n\n\n\n The Power of Gratitude  from INSEAD\n\n\n\nPinterest Embed\n\n\n\n\nTumbler Embed\n\nhttps://sasexplorerwu.tumblr.com/post/682829184961216512/sql-is-a-must-know-for-anyone-working-in-the-data\n\n\n\n\nTableau Embed\nEmbedding Tableau Public Views in iFrame source:\n\n\n\n\n\nPower BI Embed\nEmbedding Power BI Report in iFrame source:"
  },
  {
    "objectID": "posts/post-with-code2/Telangana_Census.html",
    "href": "posts/post-with-code2/Telangana_Census.html",
    "title": "తెలంగాణలోని… అన్ని జిల్లాల్లోని రెవెన్యూ డివిజన్లో, మరియు మండలాల్లో మొత్తం జనాభా",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "posts/post-with-code3/Telangana_Aggri_Commodities.html",
    "href": "posts/post-with-code3/Telangana_Aggri_Commodities.html",
    "title": "తెలంగాణలో…అన్ని మార్కెట్ యార్డులో 01-Feb-2023 నుండి 28-Feb-2023 మధ్య వ్యవసాయ పంటలకి రోజువారీ ధరలు",
    "section": "",
    "text": "Excel Chart Emeding from Google Drive’s Sheet\n\n\n\n\nOnly Chart Direct copied from Google Embed Code without File\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts.\n\ninline math: \\(E = mc^{2}\\)\n\n\n\n\nflowchart LR\n  A[Hard edge] --> B(Round edge)\n  B --> C{Decision}\n  C --> D[Result one]\n  C --> E[Result two]"
  }
]