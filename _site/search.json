[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This website is for the general public to provide end-to-end data analytics, data science, machine learning projects, and case study initiatives in artificial intelligence(AI), which can enable to find solutions for real-world industry problems and business use cases to achieve socio-economic empowerment in education, agriculture, healthcare, retail, sports, marketing, finance, telecom, communications, media, entertainment, manufacturing, transportation, constructions, and other areas."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The world of data needs you; since It defines the way we live and work!",
    "section": "",
    "text": "Health Centres Information in Telangana State, India (in Each Village/City/Town) by sumendar\n\n\n\n\n\n\n\nHealth\n\n\nTelangana\n\n\n\n\n\n\n\n\n\n\n\nMay 16, 2023\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\nColleges List in Telangana State (Each District’s) by sumendar\n\n\n\n\n\n\n\nEducation\n\n\ncolleges\n\n\n\n\n\n\n\n\n\n\n\nMay 15, 2023\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\nKCR Kits - తెలంగానలోని అన్ని గ్రామాల మరియు మండలాల వారీగా KCR Kits కి సంబందించిన వివరాలు August 2021 నుండి March 2023 వరకు\n\n\n\n\n\n\n\nKCR Kits\n\n\ntelangana\n\n\nkids health\n\n\n\n\n\n\n\n\n\n\n\nMay 5, 2023\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\nతెలంగాణ రాష్ట్రంలో అన్ని జిల్లాల, మండల మరియు ఊళ్ళకి సంబంధించిన MPTC లపేర్లు గత ఎన్నికలకి చెందిన వివరాలు\n\n\n\n\n\n\n\nelections results\n\n\nMPTC\n\n\ntelangana\n\n\nmandals\n\n\n\n\n\n\n\n\n\n\n\nApr 2, 2023\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\n2019 పార్టీల వారీగా మొత్తం MPTCల సంఖ్య\n\n\n\n\n\n\n\nMPTC\n\n\nvisualizations\n\n\nElections\n\n\nTelangana\n\n\n\n\n\n\n\n\n\n\n\nApr 1, 2023\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\nWorld’s Population Yearly Cumulatively Added Count [Animation (Play Forward/Backward)]\n\n\n\n\n\n\n\ndemographic\n\n\npopulation\n\n\nCensus\n\n\nworld\n\n\n\n\n\n\n\n\n\n\n\nMar 30, 2023\n\n\nSumendar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nతెలంగాణలోని… అన్ని జిల్లాల్లోని రెవెన్యూ డివిజన్లో, మరియు మండలాల్లో మొత్తం జనాభా\n\n\n\n\n\n\n\ndemographic\n\n\ncensus\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 15, 2023\n\n\nSumendar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nతెలంగాణలో…అన్ని మార్కెట్ యార్డులో 01-Feb-2023 నుండి 28-Feb-2023 మధ్య వ్యవసాయ పంటలకి రోజువారీ ధరలు\n\n\n\n\n\n\n\nagriculture\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 15, 2023\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\nAll Tools Combinations applied in this post for Data Science\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 10, 2023\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\nsample Post With Code (created here within qmd file edited updated within this file only)\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 9, 2023\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\nSample\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 9, 2023\n\n\nSumendar\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nAug 12, 2022\n\n\nSumendar\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/CollegesListInTS/CollegesListInTS.html",
    "href": "posts/CollegesListInTS/CollegesListInTS.html",
    "title": "Colleges List in Telangana State (Each District’s) by sumendar",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "posts/HealthCentresTS/HealthCentresInTS.html",
    "href": "posts/HealthCentresTS/HealthCentresInTS.html",
    "title": "Health Centres Information in Telangana State, India (in Each Village/City/Town) by sumendar",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "posts/post-with-code/1-SQLServerNotebook.html",
    "href": "posts/post-with-code/1-SQLServerNotebook.html",
    "title": "All Tools Combinations applied in this post for Data Science",
    "section": "",
    "text": "USE salesdb;\n\n\nSELECT TOP 15 * FROM Customers;\n\n\n--https://docs.microsoft.com/en-us/sql/azure-data-studio/notebooks/notebooks-sql-kernel\n--SELECT distinct Title FROM Person.Person\n--SELECT distinct Type, Category FROM Sales.SpecialOffer\n\n\nSELECT distinct size, color from Production.Product\n\n\nSQL Server Coding (Direct copied from Azure Data Studion After executing output got there then pasted here)\n\n\nData Types\n\n\n\nImgur\n\n\n\n\nDate Datatype\n\nDeclare @myDate date = '02-02-2016'\nSelect @myDate as MyDate\n\n\nDeclare @myDateTime datetime = '02-02-2016'\nSelect @myDateTime as MyDateTime\n\n\nDeclare @myTime time = '16:25:42.1214'\nSelect @myTime as MyTime\n\n\nDeclare @myTime time(2) = '16:25:42.1214'\nSelect @myTime as MyTime\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharecter Datatype\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-- Character\nDECLARE @myChar CHAR(20) = 'PDI'\nSELECT @myChar AS Char, DATALENGTH (@myChar) as Datalength, LEN(@myChar) AS Len\n\n\n-- Varchar\nDECLARE @myChar VARCHAR(20) = 'PDI Lmtd'\nSELECT @myChar AS Varchar, DATALENGTH (@myChar) as Datalength, LEN(@myChar) AS Len\n\n\n\nNumeric Datatype\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDECLARE @num NUMERIC(7,2) = 12376.7854\nSELECT @num as NumericData\n\n\nDECLARE @SmallInt SMALLINT = 12376.7854\nSELECT @SmallInt AS SmallIntData\n\n\n-- DECLARE @SmallInt SMALLINT = -32769 \n-- SELECT @SmallInt AS SmallIntData\n-----------------Errors when we un comment above and run codes\n-- if we give more/less than \n--affordable range it will gives an error\n--Msg 220, Level 16, State 1, Line 1\n--Arithmetic overflow error for data type smallint, value = -32769.\n\n\nDECLARE @TinyInt SMALLINT = 254\nSELECT @TinyInt AS TinyIntData\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n--Float\nDECLARE @float FLOAT(10) = 12376.7854\nSELECT @float as FLOAT\n\n\n--Data type precedence\nDECLARE @float1 FLOAT(10), @int INT\nSET @float1 = 12376.7854\nSET @int = 570\nSELECT @float1 + @int as Result\n\n\n\nFilter the data using where\n\nUSE AdventureWorks2014;\nSELECT TOP 10 * FROM AdventureWorks2014.HumanResources.Employee WHERE SickLeaveHours > 50;\n\n\nSELECT TOP 10 * FROM Sales.CreditCard WHERE ExpYear = 2008;\n\n\nUSE Training\n\n\n-- selecting products table\nSELECT * FROM products;\n\n\n-- selecting city table\nSELECT * FROM city;\n\n\nSELECT * from City;\n\n\nUse Training;\n\n\nSELECT * \nfrom City where populationDensity = 'High';\n\n\nSELECT *\n  FROM City WHERE PopulationDensity = 'High'\n\n\nSELECT\n  MIN([DATE_KEY]) AS [MIN_DATE],\n  MAX([DATE_KEY]) AS [MAX_DATE],\n  DATEDIFF(YEAR, MIN([DATE_KEY]), MAX([DATE_KEY])) [SPAN_IN_YEARS]\nFROM [EDW].[F_COLLISIONS]\n\n\nDECLARE @myDate date = '02-02-2016';\nSELECT @myDate as MyDate;\n\n\nDECLARE @myDate datetime = '02-02-2016';\nSELECT @myDate as MyDate;\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "sample Post With Code (created here within qmd file edited updated within this file only)",
    "section": "",
    "text": "This is a post with executable code check\n\n\nShow the code\nknitr::kable(\n  mtcars[1:6, 1:10]\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n\n\nValiant\n18.1\n6\n225\n105\n2.76\n3.460\n20.22\n1\n0\n3\n\n\n\n\n\n\n\nShow the code\nknitr::kable(\n  airquality[1:6, 1:6]\n)\n\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6\n\n\n\n\n\n\n\nShow the code\nlibrary(ggplot2)\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\"\n)\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 37 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 37 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nSQL code in RStudio(https://posit.co/blog/working-with-databases-and-sql-in-rstudio/ and https://irene.rbind.io/post/using-sql-in-rstudio/ and https://www.r-bloggers.com/2022/02/working-with-databases-and-sql-in-rstudio/ and https://statisticsglobe.com/run-sql-query-r):\n\n\nShow the code\n# Install these packages if you have not already\n# install.packages(c('DBI', 'RPostgres'))\nlibrary(DBI)\nlibrary(RPostgres)\n\n\n\n\nShow the code\ncon <- DBI::dbConnect(\n  RPostgres::Postgres(),\n  dbname = 'tutorialdb',\n  host = 'localhost',\n  port = 5432,\n  user = 'postgres',\n  password = 'sumendar' # insert your password here\n)\n\n\n\n\nShow the code\nDBI::dbGetQuery(con, 'SELECT customer_id, name, location, email FROM customers LIMIT 3')\n\n\n  customer_id    name  location                      email\n1           1 Orlando Australia                           \n2           2   Keith     India keith0@adventure-works.com\n3           3   Donna   Germany donna0@adventure-works.com\n\n\n\n\nShow the code\nimport math\nprint(math.sqrt(81))\n\n\n9.0\n\n\n\n\nloading data into pandas and display first 5 rows:\n\n\nShow the code\nimport pandas as pd\ndf =  pd.read_csv(\"medals.csv\")\ndf.head()\n\n\n   Year      City       Sport  ...       Event Event gender   Medal\n0  1924  Chamonix     Skating  ...  individual            M  Silver\n1  1924  Chamonix     Skating  ...  individual            W    Gold\n2  1924  Chamonix     Skating  ...       pairs            X    Gold\n3  1924  Chamonix   Bobsleigh  ...    four-man            M  Bronze\n4  1924  Chamonix  Ice Hockey  ...  ice hockey            M    Gold\n\n[5 rows x 8 columns]\n\n\n\n\nShow the code\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Some example data to display\nx = np.linspace(0, 2 * np.pi, 400)\ny = np.sin(x ** 2)\nfig, axs = plt.subplots(2, 2)\naxs[0, 0].plot(x, y)\naxs[0, 0].set_title('Axis [0, 0]')\naxs[0, 1].plot(x, y, 'tab:orange')\naxs[0, 1].set_title('Axis [0, 1]')\naxs[1, 0].plot(x, -y, 'tab:green')\naxs[1, 0].set_title('Axis [1, 0]')\naxs[1, 1].plot(x, -y, 'tab:red')\naxs[1, 1].set_title('Axis [1, 1]')\n\nfor ax in axs.flat:\n    ax.set(xlabel='x-label', ylabel='y-label')\n\n# Hide x labels and tick labels for top plots and y ticks for right plots.\nfor ax in axs.flat:\n    ax.label_outer()\nplt.show()\n\n\nTraceback (most recent call last):\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\backends\\backend_qt.py\", line 477, in _draw_idle\n    self.draw()\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\backends\\backend_agg.py\", line 436, in draw\n    self.figure.draw(self.renderer)\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\artist.py\", line 73, in draw_wrapper\n    result = draw(artist, renderer, *args, **kwargs)\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\artist.py\", line 50, in draw_wrapper\n    return draw(artist, renderer)\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\figure.py\", line 2837, in draw\n    mimage._draw_list_compositing_images(\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\image.py\", line 132, in _draw_list_compositing_images\n    a.draw(renderer)\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\artist.py\", line 50, in draw_wrapper\n    return draw(artist, renderer)\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\axes\\_base.py\", line 3055, in draw\n    self._update_title_position(renderer)\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\axes\\_base.py\", line 2989, in _update_title_position\n    if (ax.xaxis.get_ticks_position() in ['top', 'unknown']\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\axis.py\", line 2229, in get_ticks_position\n    self._get_ticks_position()]\n  File \"C:\\Users\\ADMINI~1\\ANACON~1\\lib\\site-packages\\matplotlib\\axis.py\", line 1937, in _get_ticks_position\n    minor = self.minorTicks[0]\nIndexError: list index out of range\n\n\n\n\n\n\n\n\n\n\n\nInstagram Embed\n\n\n\n::: {style=” display: flex; flex-direction: row; align-items: center;“} ::: {style=”background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;“}\n\n\n::: {style=” background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;“}\n\n::: {style=” background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;“} ::: ::: :::\n\n\n\n\n\n\n\n\n\n::: {style=” color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;“} View this post on Instagram\n\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {style=” background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;“}\n\n::: {style=” width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)“}\n\n:::\n\n::: {style=” width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);“}\n\n::: {style=” background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);“} :::\n::: {style=” width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);“} ::: ::: :::\n\n::: {style=” background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;“}\n\n::: {style=” background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;“} ::: :::\n\n\nA post shared by allinpython (@allinpython)\n\n:::\n\n\n\n\nSlideshare Embed\n\n\n\n The Power of Gratitude  from INSEAD\n\n\n\nPinterest Embed\n\n\n\n\nTumbler Embed\n\nhttps://sasexplorerwu.tumblr.com/post/682829184961216512/sql-is-a-must-know-for-anyone-working-in-the-data\n\n\n\n\nTableau Embed\nEmbedding Tableau Public Views in iFrame source:\n\n\n\n\n\nPower BI Embed\nEmbedding Power BI Report in iFrame source: \n\n\nShow the code\nimport pandas as pd\nfor i in range(10):\n    print(i)\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9"
  },
  {
    "objectID": "posts/post-with-code2/Telangana_Census.html",
    "href": "posts/post-with-code2/Telangana_Census.html",
    "title": "తెలంగాణలోని… అన్ని జిల్లాల్లోని రెవెన్యూ డివిజన్లో, మరియు మండలాల్లో మొత్తం జనాభా",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "posts/post-with-code3/Telangana_Aggri_Commodities.html",
    "href": "posts/post-with-code3/Telangana_Aggri_Commodities.html",
    "title": "తెలంగాణలో…అన్ని మార్కెట్ యార్డులో 01-Feb-2023 నుండి 28-Feb-2023 మధ్య వ్యవసాయ పంటలకి రోజువారీ ధరలు",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "posts/post-with-code4/Telangana_Past_MPTC_Election_Results.html",
    "href": "posts/post-with-code4/Telangana_Past_MPTC_Election_Results.html",
    "title": "తెలంగాణ రాష్ట్రంలో అన్ని జిల్లాల, మండల మరియు ఊళ్ళకి సంబంధించిన MPTC లపేర్లు గత ఎన్నికలకి చెందిన వివరాలు",
    "section": "",
    "text": "!pip install jovian -q\n\n\nimport jovian\njovian.commit(filename='Telangana_Past_MPTC_Election_Results.ipynb')\n\n\n\n\n[jovian] Updating notebook \"sumendar/telangana-past-mptc-election-results-f2ea9\" on https://jovian.com/\n[jovian] Committed successfully! https://jovian.com/sumendar/telangana-past-mptc-election-results-f2ea9\n\n\n'https://jovian.com/sumendar/telangana-past-mptc-election-results-f2ea9'\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code5/Sample.html#inline-code-in-r-programming",
    "href": "posts/post-with-code5/Sample.html#inline-code-in-r-programming",
    "title": "Sample",
    "section": "Inline code in R Programming",
    "text": "Inline code in R Programming\nThe mtcars dataset has 32 rows\nThe mtcars dataset has an average miles/per gallon of 20.090625"
  },
  {
    "objectID": "posts/post-with-code5/Sample.html#interactive-graph-in-r-programming",
    "href": "posts/post-with-code5/Sample.html#interactive-graph-in-r-programming",
    "title": "Sample",
    "section": "Interactive Graph in R Programming:",
    "text": "Interactive Graph in R Programming:\n\n\nShow the code\n#install.packages(\"plotly\")\n#install.packages(\"gapminder\")\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(gapminder)\n\np <- gapminder %>%\n  filter(year==1977) %>%\n  ggplot( aes(gdpPercap, lifeExp, size = pop, color=continent)) +\n  geom_point() +\n  theme_bw()\n\nggplotly(p)"
  },
  {
    "objectID": "posts/post-with-code5/Sample.html#markdown-echofalse-cell",
    "href": "posts/post-with-code5/Sample.html#markdown-echofalse-cell",
    "title": "Sample",
    "section": "Markdown echo:false cell:",
    "text": "Markdown echo:false cell:\n\n\n<IPython.core.display.Markdown object>\n\n\n\n\nShow the code\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots()\n\nfruits = ['apple', 'blueberry', 'cherry', 'orange']\ncounts = [40, 100, 30, 55]\nbar_labels = ['red', 'blue', '_red', 'orange']\nbar_colors = ['tab:red', 'tab:blue', 'tab:red', 'tab:orange']\n\nax.bar(fruits, counts, label=bar_labels, color=bar_colors)\n\n\n<BarContainer object of 4 artists>\n\n\nShow the code\nax.set_ylabel('fruit supply')\nax.set_title('Fruit supply by kind and color')\nax.legend(title='Fruit color')\n\nplt.show()"
  },
  {
    "objectID": "posts/post-with-code5/Sample.html#interactive-graph-in-python-programming",
    "href": "posts/post-with-code5/Sample.html#interactive-graph-in-python-programming",
    "title": "Sample",
    "section": "Interactive Graph in Python Programming:",
    "text": "Interactive Graph in Python Programming:\n\n\nShow the code\nimport plotly.express as px\nimport plotly.io as pio\ndf = px.data.iris()\nfig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\", \n                 color=\"species\", \n                 marginal_y=\"violin\", marginal_x=\"box\", \n                 trendline=\"ols\", template=\"simple_white\")\nfig.show()"
  },
  {
    "objectID": "posts/post-with-code5/Sample.html#mysql-sql-server-and-postgresql-coding-direct-copied-from-azure-data-studio-after-executing-output-got-there-then-pasted-here",
    "href": "posts/post-with-code5/Sample.html#mysql-sql-server-and-postgresql-coding-direct-copied-from-azure-data-studio-after-executing-output-got-there-then-pasted-here",
    "title": "Sample",
    "section": "MySQL, SQL Server and PostgreSQL Coding (Direct copied from Azure Data Studio After executing output got there then pasted here)",
    "text": "MySQL, SQL Server and PostgreSQL Coding (Direct copied from Azure Data Studio After executing output got there then pasted here)\n\n\nShow the code\n# try later for this"
  },
  {
    "objectID": "posts/post-with-code5/World_Population_Count.html",
    "href": "posts/post-with-code5/World_Population_Count.html",
    "title": "World’s Population Yearly Cumulatively Added Count [Animation (Play Forward/Backward)]",
    "section": "",
    "text": "action\n\n\n\n\n\nProject Original Source:\nhttps://tabsoft.co/3G4mA5o\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code5/పార్టీల వారీగా మొత్తం MPTCల సంఖ్య.html",
    "href": "posts/post-with-code5/పార్టీల వారీగా మొత్తం MPTCల సంఖ్య.html",
    "title": "2019 పార్టీల వారీగా మొత్తం MPTCల సంఖ్య",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "posts/post-with-code6/IPL2023_Analysis.html",
    "href": "posts/post-with-code6/IPL2023_Analysis.html",
    "title": "End to End Projects",
    "section": "",
    "text": "import pandas as pd\ndf =  pd.read_excel('IPL_2023 _Points_Table.xlsx')\n\n\ndf.head()\n\n\n\n\n\n  \n    \n      \n      Teams\n      Matches Played\n      Won Matches\n      Lost Matches\n      Tied Matches\n      No Results Match\n      Points\n      Net Run Rate\n    \n  \n  \n    \n      0\n      Gujarat Titans\n      8\n      6\n      2\n      0\n      0\n      12\n      0.638\n    \n    \n      1\n      Rajasthan Royals\n      9\n      5\n      4\n      0\n      0\n      10\n      0.800\n    \n    \n      2\n      Lucknow Super Giants\n      9\n      5\n      4\n      0\n      0\n      10\n      0.639\n    \n    \n      3\n      Chennai Super Kings\n      9\n      5\n      4\n      0\n      0\n      10\n      0.329\n    \n    \n      4\n      Royal Challengers Bangalore\n      9\n      5\n      4\n      0\n      0\n      10\n      -0.030\n    \n  \n\n\n\n\n\nxls = pd.ExcelFile('IPL_2023 _Points_Table.xlsx')\nIPL_2023_Points_Table = pd.read_excel(xls, 'IPL_2023_Points_Table')\nGujarat_Titans = pd.read_excel(xls, 'Gujarat_Titans')\nRajasthan_Royals = pd.read_excel(xls, 'Rajasthan_Royals')\nLucknow_Super_Giants = pd.read_excel(xls, 'Lucknow_Super_Giants')\nChennai_Super_Kings = pd.read_excel(xls, 'Chennai_Super_Kings')\nRoyal_Challengers_Bangalore = pd.read_excel(xls, 'Royal_Challengers_Bangalore')\nPunjab_Kings = pd.read_excel(xls, 'Punjab_Kings')\nMumbai_Indians = pd.read_excel(xls, 'Mumbai_Indians')    \nKolkata_Knight_Riders = pd.read_excel(xls, 'Kolkata_Knight_Riders')\nSunrisers_Hyderabad = pd.read_excel(xls, 'Sunrisers_Hyderabad')\nDelhi_Capitals = pd.read_excel(xls, 'Delhi_Capitals')\n\n\nprint(IPL_2023_Points_Table.head())\nprint(Gujarat_Titans.head())\nprint(Rajasthan_Royals.head())\nprint(Lucknow_Super_Giants.head())\nprint(Chennai_Super_Kings.head())\nprint(Royal_Challengers_Bangalore.head())\nprint(Punjab_Kings.head())\nprint(Mumbai_Indians.head())\nprint(Kolkata_Knight_Riders.head())\nprint(Sunrisers_Hyderabad.head())\nprint(Delhi_Capitals.head())\n\n                         Teams  Matches Played  Won Matches  Lost Matches  \\\n0               Gujarat Titans               8            6             2   \n1             Rajasthan Royals               9            5             4   \n2         Lucknow Super Giants               9            5             4   \n3          Chennai Super Kings               9            5             4   \n4  Royal Challengers Bangalore               9            5             4   \n\n   Tied Matches  No Results Match  Points  Net Run Rate  \n0             0                 0      12         0.638  \n1             0                 0      10         0.800  \n2             0                 0      10         0.639  \n3             0                 0      10         0.329  \n4             0                 0      10        -0.030  \n            Teams               Opponent Description       Date  \\\n0  Gujarat Titans    Chennai Super Kings   1st Match 2023-03-31   \n1  Gujarat Titans         Delhi Capitals   7th Match 2023-04-04   \n2  Gujarat Titans  Kolkata Knight Riders  13th Match 2023-04-09   \n3  Gujarat Titans           Punjab Kings  18th Match 2023-04-13   \n4  Gujarat Titans       Rajasthan Royals  23rd Match 2023-04-16   \n\n           Result  \n0   Won by 5 wkts  \n1   Won by 6 wkts  \n2  Loss by 3 wkts  \n3   Won by 6 wkts  \n4  Loss by 3 wkts  \n              Teams             Opponent Description       Date  \\\n0  Rajasthan Royals  Sunrisers Hyderabad   4th Match 2023-04-02   \n1  Rajasthan Royals         Punjab Kings   8th Match 2023-04-05   \n2  Rajasthan Royals       Delhi Capitals  11th Match 2023-04-08   \n3  Rajasthan Royals  Chennai Super Kings  17th Match 2023-04-12   \n4  Rajasthan Royals       Gujarat Titans  23rd Match 2023-04-16   \n\n           Result  \n0  Won by 72 runs  \n1  Loss by 5 runs  \n2  Won by 57 runs  \n3   Won by 3 runs  \n4   Won by 3 wkts  \n                  Teams                     Opponent Description       Date  \\\n0  Lucknow Super Giants               Delhi Capitals   3rd Match 2023-04-01   \n1  Lucknow Super Giants          Chennai Super Kings   6th Match 2023-04-03   \n2  Lucknow Super Giants          Sunrisers Hyderabad  10th Match 2023-04-07   \n3  Lucknow Super Giants  Royal Challengers Bangalore  15th Match 2023-04-10   \n4  Lucknow Super Giants                 Punjab Kings  21st Match 2023-04-15   \n\n            Result  \n0   Won by 50 runs  \n1  Loss by 12 runs  \n2    Won by 5 wkts  \n3     Won by 1 wkt  \n4   Loss by 2 wkts  \n                 Teams                     Opponent Description       Date  \\\n0  Chennai Super Kings               Gujarat Titans   1st Match 2023-03-31   \n1  Chennai Super Kings         Lucknow Super Giants   6th Match 2023-04-03   \n2  Chennai Super Kings               Mumbai Indians  12th Match 2023-04-08   \n3  Chennai Super Kings             Rajasthan Royals  17th Match 2023-04-12   \n4  Chennai Super Kings  Royal Challengers Bangalore  24th Match 2023-04-17   \n\n           Result  \n0  Loss by 5 wkts  \n1  Won by 12 runs  \n2   Won by 7 wkts  \n3  Loss by 3 runs  \n4   Won by 8 runs  \n                         Teams               Opponent Description       Date  \\\n0  Royal Challengers Bangalore         Mumbai Indians   5th Match 2023-04-02   \n1  Royal Challengers Bangalore  Kolkata Knight Riders   9th Match 2023-04-06   \n2  Royal Challengers Bangalore   Lucknow Super Giants  15th Match 2023-04-10   \n3  Royal Challengers Bangalore         Delhi Capitals  20th Match 2023-04-15   \n4  Royal Challengers Bangalore    Chennai Super Kings  24th Match 2023-04-17   \n\n            Result  \n0    Won by 8 wkts  \n1  Loss by 81 runs  \n2    Loss by 1 wkt  \n3   Won by 23 runs  \n4   Loss by 8 runs  \n          Teams               Opponent Description       Date  \\\n0  Punjab Kings  Kolkata Knight Riders   2nd Match 2023-04-01   \n1  Punjab Kings       Rajasthan Royals   8th Match 2023-04-05   \n2  Punjab Kings    Sunrisers Hyderabad  14th Match 2023-04-09   \n3  Punjab Kings         Gujarat Titans  18th Match 2023-04-13   \n4  Punjab Kings   Lucknow Super Giants  21st Match 2023-04-15   \n\n                       Result  \n0  Won by 7 runs (DLS method)  \n1               Won by 5 runs  \n2              Loss by 8 wkts  \n3              Loss by 6 wkts  \n4               Won by 2 wkts  \n            Teams                     Opponent Description       Date  \\\n0  Mumbai Indians  Royal Challengers Bangalore   5th Match 2023-04-02   \n1  Mumbai Indians          Chennai Super Kings  12th Match 2023-04-08   \n2  Mumbai Indians               Delhi Capitals  16th Match 2023-04-11   \n3  Mumbai Indians        Kolkata Knight Riders  22nd Match 2023-04-16   \n4  Mumbai Indians          Sunrisers Hyderabad  25th Match 2023-04-18   \n\n           Result  \n0  Loss by 8 wkts  \n1  Loss by 7 wkts  \n2   Won by 6 wkts  \n3   Won by 5 wkts  \n4  Won by 14 runs  \n                   Teams                     Opponent Description       Date  \\\n0  Kolkata Knight Riders                 Punjab Kings   2nd Match 2023-04-01   \n1  Kolkata Knight Riders  Royal Challengers Bangalore   9th Match 2023-04-06   \n2  Kolkata Knight Riders               Gujarat Titans  13th Match 2023-04-09   \n3  Kolkata Knight Riders          Sunrisers Hyderabad  19th Match 2023-04-14   \n4  Kolkata Knight Riders               Mumbai Indians  22nd Match 2023-04-16   \n\n                        Result  \n0  Loss by 7 runs (DLS method)  \n1               Won by 81 runs  \n2                Won by 3 wkts  \n3              Loss by 23 runs  \n4               Loss by 5 wkts  \n                 Teams               Opponent Description       Date  \\\n0  Sunrisers Hyderabad       Rajasthan Royals   4th Match 2023-04-02   \n1  Sunrisers Hyderabad   Lucknow Super Giants  10th Match 2023-04-07   \n2  Sunrisers Hyderabad           Punjab Kings  14th Match 2023-04-09   \n3  Sunrisers Hyderabad  Kolkata Knight Riders  19th Match 2023-04-14   \n4  Sunrisers Hyderabad         Mumbai Indians  25th Match 2023-04-18   \n\n            Result  \n0  Loss by 72 runs  \n1   Loss by 5 wkts  \n2    Won by 8 wkts  \n3   Won by 23 runs  \n4  Loss by 14 runs  \n            Teams                     Opponent Description       Date  \\\n0  Delhi Capitals         Lucknow Super Giants   3rd Match 2023-04-01   \n1  Delhi Capitals               Gujarat Titans   7th Match 2023-04-04   \n2  Delhi Capitals             Rajasthan Royals  11th Match 2023-04-08   \n3  Delhi Capitals               Mumbai Indians  16th Match 2023-04-11   \n4  Delhi Capitals  Royal Challengers Bangalore  20th Match 2023-04-15   \n\n            Result  \n0  Loss by 50 runs  \n1   Loss by 6 wkts  \n2  Loss by 57 runs  \n3   Loss by 6 wkts  \n4  Loss by 23 runs"
  },
  {
    "objectID": "posts/post-with-code7/KCR-Kits-Aug21-Mar23.html",
    "href": "posts/post-with-code7/KCR-Kits-Aug21-Mar23.html",
    "title": "KCR Kits - తెలంగానలోని అన్ని గ్రామాల మరియు మండలాల వారీగా KCR Kits కి సంబందించిన వివరాలు August 2021 నుండి March 2023 వరకు",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts.\n\ninline math: \\(E = mc^{2}\\)\n\n\n\n\nflowchart LR\n  A[Hard edge] --> B(Round edge)\n  B --> C{Decision}\n  C --> D[Result one]\n  C --> E[Result two]"
  }
]